{
  "questionId": "98",
  "title": "Validate Binary Search Tree",
  "titleSlug": "validate-binary-search-tree",
  "content": "Given the root of a binary tree, determine if it is a valid binary search tree (BST). A valid BST is defined as follows: The left subtree of a node contains only nodes with keys less than the node's key. The right subtree of a node contains only nodes with keys greater than the node's key. Both the left and right subtrees must also be binary search trees.   Example 1: Input: root = [2,1,3] Output: true Example 2: Input: root = [5,1,4,null,null,3,6] Output: false Explanation: The root node's value is 5 but its right child's value is 4.   Constraints: The number of nodes in the tree is in the range [1, 104]. -231 <= Node.val <= 231 - 1",
  "difficulty": "Medium",
  "likes": 17740,
  "dislikes": 1415,
  "exampleTestcases": "[2,1,3] [5,1,4,null,null,3,6]",
  "topicTags": [
    {
      "name": "Tree",
      "slug": "tree"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Binary Search Tree",
      "slug": "binary-search-tree"
    },
    {
      "name": "Binary Tree",
      "slug": "binary-tree"
    }
  ]
}